@using HelperMethods.Models
@model string

@{
    ViewBag.Title = "GetPeople";
    var opts = new AjaxOptions
    {
        UpdateTargetId = "tableBody",
        LoadingElementId = "loadingElement",
        LoadingElementDuration = 1000,
    };
}

<script type="text/javascript">
    function processData(data) {
        var target = $("#tableBody");
        target.empty();
        for (var i = 0; i < data.length; i++) {
            var person = data[i];
            target.append("<tr><td>" + person.FirstName + "</td><td>" + person.LastName + "</td><td>" + person.role + "</td></tr>");
        }
    }
</script>

<h2>Get people</h2>

<div id="loadingElement" class="load" style="display:none">
    <p>Loading data...</p>
</div>

<table>
    <thead><tr><th>First</th><th>Last</th><th>Role</th></tr></thead>
    <tbody id="tableBody">
        @Html.Action("GetPeopleData", new {selectedRole = Model})
    </tbody>
</table>

@using (Ajax.BeginForm("GetPeopleData", opts))
{
    <div>
        @Html.DropDownList("selectedRole", new SelectList(new []{"All"}.Concat(Enum.GetNames(typeof(Role)))))
        <button type="submit">Submit</button>
    </div>
}

<div>
    @foreach (var role in Enum.GetNames(typeof (Role)))
    {
        <div class="ajaxLink">
            @Ajax.ActionLink(role, "GetPeopleData", new {selectedRole = role}, new AjaxOptions
            {
                Url = Url.Action("GetPeopleDataJson", new {selectedRole = role}),
                OnSuccess = "processData",
            })
        </div>
    }
</div>